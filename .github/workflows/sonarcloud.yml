name: SonarCloud
on:
   push:
     branches:
       - master
 # pull_request:
  #  types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install dotnet-coverage
        run: |
          dotnet tool install --global dotnet-coverage
          dotnet tool list --global
          dotnet-coverage --version
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: bash
        run: |
          mkdir -p ./.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
          
      - name: Environment variables
        run: |
          echo "AZURE_DB_USERNAME="${{ secrets.AZURE_DB_USERNAME }}"" >> ./Hovedopgave.Server/env.env
          echo "AZURE_DB_PASSWORD="${{ secrets.AZURE_DB_PASSWORD }}"" >> ./Hovedopgave.Server/env.env
          echo "AZURE_DB_HOST="${{ secrets.AZURE_DB_HOST }}"" >> ./Hovedopgave.Server/env.env
          echo "AZURE_DB_DATABASE="${{ secrets.AZURE_DB_DATABASE }}"" >> ./Hovedopgave.Server/env.env
          echo "PASSWORD_HASH="${{ secrets.PASSWORD_HASH }}"" >> ./Hovedopgave.Server/env.env
          echo "JWT_TOKEN="${{ secrets.JWT_TOKEN }}"" >> ./Hovedopgave.Server/env.env
          
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: bash
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"DrengeneFraKEA_Hovedopgave" /o:"drengenefrakea" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet build
          dotnet-coverage collect 'dotnet test' -f xml  -o 'coverage.xml'
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
